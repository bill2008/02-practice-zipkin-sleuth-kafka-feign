<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">    
	<modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>hello1</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>hello1</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>

<!--         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency> -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
        </dependency>
		<!-- 2. START service with zipkin without kafka/rabbmit-->
		<!--
         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency> -->
        <!-- 2. END service with zipkin without kafka/rabbmit-->
        
        <!-- 1. START use stream for the collector like kafka or rabbitmq-->
        <!-- change to @EnableZipkinStreamServer when start-->
        <!-- <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-sleuth-zipkin-stream</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-kafka</artifactId>
        </dependency>
        <dependency>
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-stream-binder-kafka</artifactId>
	   </dependency> -->
        <!--1. END use stream for the collector like kafka or rabbitmq -->
        
<!--
       <dependency>
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-sleuth-stream</artifactId>
	   </dependency>
	   <dependency>
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-starter-sleuth</artifactId>
	   </dependency>
	   

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-kafka</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.kafka</groupId>
					<artifactId>spring-kafka</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
			<version>1.0.3.RELEASE</version>
		</dependency>
	  3. End use stream for the collector like kafka or rabbitmq
	    -->
	            <!--3. Start use stream for the collector like kafka or rabbitmq -->
 	   <dependency>
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-sleuth-stream</artifactId>
	   </dependency>
	   <dependency>
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-starter-sleuth</artifactId>
	   </dependency>
	   
	   <dependency>
	       <groupId>org.springframework.cloud</groupId>
	       <artifactId>spring-cloud-stream-binder-kafka</artifactId>
	   </dependency>
	   <!--3. End use stream for the collector like kafka or rabbitmq -->
	   
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <!-- Spring boot 1.5.2 with Dalston.Release can work together-->
                <version>Dalston.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


</project>
