<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example.zipkin</groupId>
	<artifactId>zipkin-service</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>zipkin-service</name>
	<description>zipkin server with kafka enabled</description>

  	<properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<java.version>1.8</java.version>
  	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
	</parent>
	
    <dependencies>

        <!-- 1. START use stream for the collector like kafka or rabbitmq-->
        <!-- change to @EnableZipkinStreamServer when start-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-sleuth-zipkin-stream</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
        </dependency>
        <!--1. END use stream for the collector like kafka or rabbitmq -->
        
        
        <!-- 2. START if you just want to try zipkin, use below setup -->
        <!-- change to @EnableZipkinServer when start-->
        <!-- 
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
	        <groupId>org.springframework.cloud</groupId>
	        <artifactId>spring-cloud-sleuth-zipkin</artifactId>
	    </dependency>
	     -->
	    <!--2. END if you just want to try zipkin, use below setup -->
	    
	    <dependency>
	        <groupId>io.zipkin.java</groupId>
	        <artifactId>zipkin-server</artifactId>
	    </dependency>
        <dependency>
            <groupId>io.zipkin.java</groupId>
            <artifactId>zipkin-autoconfigure-ui</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <!--version>Brixton.RELEASE</version-->
                <version>Dalston.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>
	
   <build>
    <plugins>
      <!-- spring-boot-maven-plugin -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.16.5</version>
        <configuration>
          <images>
            <image>
              <name>${project.artifactId}:${project.version}</name>
              <build>
                <assembly>
                  <basedir>/</basedir>
                  <inline>
                    <files>
                      <file>
                        <source>${project.build.directory}/${project.build.finalName}.jar</source>
                        <outputDirectory>/</outputDirectory>
                      </file>
                    </files>
                  </inline>
                </assembly>
                <tags>
                  <tag>${project.version}</tag>
                  <tag>latest</tag>
                </tags>
                <from>frolvlad/alpine-oraclejdk8:slim</from>
                <ports>
                  <port>9411</port>
                </ports>
                <cmd>java -jar ${project.build.finalName}.jar</cmd>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>build-image</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>push-image</id>
            <phase>deploy</phase>
            <goals>
              <goal>push</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
    
</project>
